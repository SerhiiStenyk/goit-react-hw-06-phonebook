{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Notification/Notification.module.css","App.module.css","components/Filter/Filter.module.css","redux/actions.js","components/Notification/Notification.jsx","components/ContactForm/ContactForm.js","components/ContactList/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","redux/reducers.js","redux/store.js","index.js","components/ContactList/ContactList.module.css"],"names":["module","exports","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","Notification","className","s","alert","text","ContactForm","state","error","handleChange","e","setState","currentTarget","value","handleSubmit","preventDefault","props","contacts","some","item","toggleError","onSubmit","resetForm","setTimeout","this","CSSTransition","in","classNames","errorStyles","timeout","unmountOnExit","form","autoComplete","label","input","type","onChange","btn","disabled","Component","connect","items","dispatch","contact","actions","ContactListItem","delete","onClick","icon","findContact","filter","normalize","toLowerCase","includes","TransitionGroup","component","list","map","target","appear","styles","title","length","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","persistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.69e8aacd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1fuOn\",\"label\":\"ContactForm_label__378f8\",\"input\":\"ContactForm_input__gm87B\",\"btn\":\"ContactForm_btn__2Bpnz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Notification_alert__294Wr\",\"text\":\"Notification_text__3WvWm\",\"enter\":\"Notification_enter__1Q63C\",\"enterActive\":\"Notification_enterActive__y-ZzH\",\"exit\":\"Notification_exit__1TA8V\",\"exitActive\":\"Notification_exitActive__3mZBI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"App_enter__2d_oE\",\"enterActive\":\"App_enterActive__3Z_zS\",\"exit\":\"App_exit__qu2sb\",\"exitActive\":\"App_exitActive__3R2-x\",\"appear\":\"App_appear__3r9lb\",\"appearActive\":\"App_appearActive__1uccQ\",\"title\":\"App_title__-GfWs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__1E5tH\",\"input\":\"Filter_input__2DoVp\"};","/* eslint-disable import/no-anonymous-default-export */\nimport { v4 as uuidv4 } from 'uuid';\nimport { createAction } from '@reduxjs/toolkit';\n\nconst addContact = createAction('add', ({ name, number }) => ({\n    payload: {\n        id: uuidv4(),\n        name,\n        number\n    },\n}));\nconst deleteContact = createAction('delete');\nconst changeFilter = createAction('changeFilter');\nexport default { addContact, deleteContact, changeFilter };","import React from 'react';\nimport s from './Notification.module.css';\n\nconst Notification = () => (\n        <div className={s.alert}>\n            <p className={s.text}>Contact already exist!</p>\n        </div>\n    );\n\nexport default Notification;","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { CSSTransition } from 'react-transition-group';\nimport actions from '../../redux/actions';\nimport s from './ContactForm.module.css';\nimport Notification from '../Notification/Notification';\nimport errorStyles from '../Notification/Notification.module.css';\n\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n    error: false,\n  };\n  handleChange = e => {\n    this.setState({ [e.currentTarget.name]: e.currentTarget.value });\n  };\n  handleSubmit = e => {\n    e.preventDefault();\n    const duplicate = this.props.contacts.some(\n      item => item.name === this.state.name,\n    );\n    if (duplicate) return this.toggleError();\n    this.props.onSubmit(this.state);\n    this.resetForm();\n  };\n  toggleError = () => {\n    this.setState({ error: true });\n    setTimeout(() => { this.setState({ error:false }) }, 2000);\n  };\n  resetForm = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    const { name, number, error } = this.state;\n    return (\n      <>\n        <CSSTransition\n          in={error}\n          classNames={errorStyles}\n          timeout={250}\n          unmountOnExit\n        >\n          <Notification/>\n        </CSSTransition>\n        <form\n          className={s.form}\n          autoComplete=\"off\"\n          onSubmit={this.handleSubmit}\n        >\n          <label className={s.label}>\n            {' '}\n            Name\n            <input\n              className={s.input}\n              type=\"text\"\n              name=\"name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n          <label className={s.label}>\n            {' '}\n            Phone\n            <input\n              className={s.input}\n              type=\"tel\"\n              name=\"number\"\n              value={number}\n              onChange={this.handleChange}\n            />\n          </label>\n          <button className={s.btn} type=\"submit\" disabled={!name}>\n            {' '}\n            Add contact\n          </button>\n        </form>\n      </>\n    );\n  }\n};\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items,\n})\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: (contact) => dispatch(actions.addContact(contact)),\n});\nexport default connect(mapStateToProps, mapDispatchToProps )(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './ContactList.module.css';\nimport { BsFillXSquareFill } from \"react-icons/bs\";\n\nconst ContactListItem = ({ id, name, number, deleteContact }) => {\n  return (\n    <li className={s.item}>\n      {' '}\n      <span>{name}</span> <span>{number}</span>\n        <button\n          className={s.delete}\n          type=\"button\"\n          onClick={() => {\n            deleteContact(id);\n          }}\n        >\n          <BsFillXSquareFill className={s.icon} />\n        </button>\n    </li>\n  );\n};\n\nContactListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n};\n\nexport default ContactListItem;\n","import React from 'react';\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\nimport { connect } from 'react-redux';\nimport ContactListItem from './ContactListItem';\nimport s from './ContactList.module.css';\nimport actions from '../../redux/actions';\n\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <TransitionGroup component=\"ul\" className={s.list}>\n      {contacts.map(({ id, name, number }) => (\n        <CSSTransition key={id} timeout={250} classNames={s}>\n          <ContactListItem\n          key={id}\n          name={name}\n          number={number}\n          id={id}\n          deleteContact={deleteContact}\n        />\n        </CSSTransition>\n      ))}\n    </TransitionGroup>\n  );\n};\nconst findContact = (contacts, filter) => {\n    const normalize = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalize),\n    );\n  };\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: findContact(items, filter),\n});\nconst mapDispatchToProps = dispatch => ({\n  deleteContact: (id) => dispatch(actions.deleteContact(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/actions';\nimport s from './Filter.module.css';\nimport PropTypes from 'prop-types';\n\n\nconst Filter = ({ value, onChange }) => (\n  <label className={s.filter}>\n    Find contacts by name\n    <input className={s.input} type=\"text\" value={value} onChange={onChange} />\n  </label>\n);\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\nconst mapStateToProps = state => ({\n  value: state.contacts.filter,\n});\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(actions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport ContactList from './components/ContactList/ContactList';\nimport Filter from './components/Filter/Filter';\nimport styles from './App.module.css';\nimport { connect } from 'react-redux';\n\nconst App = ({ contacts }) => (\n  <div>\n    <CSSTransition\n      in={true}\n      appear={true}\n      classNames={styles}\n      timeout={1000}\n      unmountOnExit\n    >\n      <h1 className={styles.title}>Phonebook</h1>\n    </CSSTransition>\n        \n    <ContactForm />\n    \n    <CSSTransition\n      in={contacts.length > 1}\n      classNames={styles}\n      timeout={250}\n      unmountOnExit\n    >\n      <Filter />\n    </CSSTransition>\n\n    <CSSTransition\n      in={contacts.length > 0}\n      classNames={styles}\n      timeout={250}\n      unmountOnExit\n    >\n      <ContactList />\n    </CSSTransition>\n  </div>\n);\nconst mapStateToProps = state => ({\n  contacts: state.contacts.items\n});\nexport default connect(mapStateToProps)(App);\n","import { createReducer } from '@reduxjs/toolkit';\nimport { combineReducers } from 'redux';\nimport actions from './actions';\n\nconst items = createReducer([], {\n    [actions.addContact]: (state, { payload }) => [...state, payload],\n    [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload),\n});\nconst filter = createReducer('', {\n    [actions.changeFilter]: (_, { payload }) => payload,\n});\nexport default combineReducers({\n    items,\n    filter\n});","/* eslint-disable import/no-anonymous-default-export */\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport logger from 'redux-logger';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport reducer from './reducers';\n\nconst middleware = [...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  }), logger];\nconst persistConfig = {\n    key: 'phoneBook',\n    storage,\n    blacklist: ['filter'],\n};\nconst store = configureStore({\n    reducer: {\n        contacts: persistReducer(persistConfig, reducer),\n    },\n    middleware,\n    devTools: process.env.NODE_ENV === 'development',\n});\nconst persistor = persistStore(store);\nexport default { store, persistor };","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport './index.css';\nimport App from './App';\nimport store from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n    \n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__2T7aG\",\"item\":\"ContactList_item__3YsZK\",\"delete\":\"ContactList_delete__3bnVP\",\"icon\":\"ContactList_icon__33G6D\",\"enter\":\"ContactList_enter__1Tfxs\",\"enterActive\":\"ContactList_enterActive__BPn6N\",\"exit\":\"ContactList_exit__3MW4R\",\"exitActive\":\"ContactList_exitActive__ZA3FS\"};"],"sourceRoot":""}